1)
import numpy as np

# 30-аас 70 хүртэлх тэгш тооны массив 
even_numbers = np.arange(30, 71, 2)

# Массив дахь элементийн тоог авна
num_elements = even_numbers.size

print(even_numbers)
print("Number of elements:", num_elements)
2)
import numpy as np

# Цельсийн хэмийг Фаренгейт болгон хувиргах функц
def celsius_to_fahrenheit(celsius_array):
    return (celsius_array * 9/5) + 32

# Фаренгейтийг Цельсийн хэмд шилжүүлэх функц
def fahrenheit_to_celsius(fahrenheit_array):
    return (fahrenheit_array - 32) * 5/9

# Хөрвүүлэх хэрэглэгчийн функц
def temperature_converter():
    choice = input("Choose conversion:\n1. Celsius to Fahrenheit\n2. Fahrenheit to Celsius\nEnter 1 or 2: ")
    
    if choice == '1':
       # Цельсийн Фаренгейтийн хөрвүүлэлт
        celsius_values = input("Enter Celsius values separated by spaces: ")
        celsius_array = np.array(list(map(float, celsius_values.split())))
        fahrenheit_array = celsius_to_fahrenheit(celsius_array)
        print("Converted to Fahrenheit:", fahrenheit_array)
    
    elif choice == '2':
        # Фаренгейтийг Цельсийн хэмд шилжүүлэх
        fahrenheit_values = input("Enter Fahrenheit values separated by spaces: ")
        fahrenheit_array = np.array(list(map(float, fahrenheit_values.split())))
        celsius_array = fahrenheit_to_celsius(fahrenheit_array)
        print("Converted to Celsius:", celsius_array)
    
    else:
        print("Invalid choice! Please select 1 or 2.")

# Температур хувиргагч функцийг ажиллуул
temperature_converter()
3)
import numpy as np

def reshape_array(x):
    # Хэрэглэгчийн дүрсний оролтыг авах (tuple хэлбэрээр)
    rows = int(input("Enter the number of rows for reshaping: "))
    cols = int(input("Enter the number of columns for reshaping: "))
    
   # Элементүүдийн нийт тоо x хэмжээтэй тохирч байгаа эсэхийг шалгана уу
    if rows * cols != x.size:
        print(f"Invalid shape: {rows}x{cols} does not match the total number of elements ({x.size})")
        return
    
    # Массивын хэлбэрийг өөрчлөх
    reshaped_array = x.reshape(rows, cols)
    
    # Дахин хэлбэрт оруулсан массивыг буцаана
    return reshaped_array

x = np.array([1, 2, 3, 4, 5, 6])

reshaped_array = reshape_array(x)

if reshaped_array is not None:
    print("\nReshaped array:")
    print(reshaped_array)
4)
import numpy as np

a = np.array([97, 101, 105, 111, 117])  
b = np.array(['a', 'e', 'i', 'o', 'u']) 

# Boolean маск нь 100-аас дээш, 110-аас бага кодыг шүүнэ
mask = (a > 100) & (a < 110)

# Маск ашиглан "b" массив дахь харгалзах тэмдэгтүүдийг шүүнэ үү.
result = b[mask]

# Үр дүнг хэвлэ
print("Output:")
print(' '.join(result))
5)
import numpy as np

a = np.array([[1, 2, 3],
              [4, 5, 6],
              [7, 8, 9],
              [10, 11, 12]])

b = np.array([[1, 2],
              [3, 4],
              [5, 6],
              [7, 8]])

# b матрицын хэлбэрийг (3, 2) болгож a матрицаар үржүүлэх боломжтой.
b_reshaped = b[:3, :]  # Б-ийн эхний 3 мөрийг л авч хэлбэрийг нь өөрчилнө

# Матрицын үржүүлэх үйлдлийг гүйцэтгэнэ
product = np.dot(a, b_reshaped)

# Үр дүнг хэвлэ
print("Matrix a:")
print(a)

print("\nReshaped Matrix b:")
print(b_reshaped)

print("\nProduct of a and reshaped b:")
print(product)
6)
import pandas as pd

data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 5, 3]

series = pd.Series(data)

# Дундажийг тооцоол
mean_value = series.mean()

# Стандарт хазайлтыг тооцоол
std_value = series.std()

# Үр дүнг хэвлэх
print(f"Mean: {mean_value}")
print(f"Standard Deviation: {std_value}")
7)
import pandas as pd

data = ['php', 'python', 'java', 'c#']

series = pd.Series(data)

# Үг бүрийн эхний болон сүүлчийн үсгийг томоор бичих функц
def capitalize_first_last(word):
    if len(word) > 1:
        return word[0].upper() + word[1:-1] + word[-1].upper()
    else:
        return word.upper()  # Хэрэв үг ганц тэмдэгттэй бол томоор бичнэ үү

# Цуврал дахь үг бүрт функцийг хэрэглээрэй
capitalized_series = series.apply(capitalize_first_last)

# Үр дүнгийн цувралыг хэвлэх
print(capitalized_series)
8)
import pandas as pd
import numpy as np

# DataFrame үүсгэх
data = {
    'name': ['Dorj', 'Khulan', 'Sergelen', 'Ganchimeg', 'Khaliun', 'Bolor', 'Anu', 'Tsetse', 'Purev', 'Zulaa'],
    'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
    'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
    'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']
}

# Индексийг тодорхойл
index_labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

# DataFrame үүсгэх
df = pd.DataFrame(data, index=index_labels)

# a) Эхний 3 мөрийг хэвлэ
print("a) First 3 lines:")
print(df.head(3))

# b) "Нэр" ба "оноо" баганын утгыг хэвлэж гарга
print("\nb) Values of 'name' and 'score' columns:")
print(df[['name', 'score']])

# c) "нэр" болон "оноо" баганын 1, 3, 5, 6-р мөрүүдийг хэвлэх
print("\nc) Rows 1, 3, 5, and 6 in 'name' and 'score' columns:")
print(df.loc[['b', 'd', 'f', 'g'], ['name', 'score']])

# d) "Оролдлого" нь 2-оос их байгаа оюутнуудын өгөгдлийг хэвлэ
print("\nd) Students with 'attempts' greater than 2:")
print(df[df['attempts'] > 2])

# e) "Оноо"-ны утга нь 15-20 хооронд байгаа оюутнуудын өгөгдлийг хэвлэнэ
print("\ne) Students with 'score' between 15 and 20:")
print(df[df['score'].between(15, 20)])
